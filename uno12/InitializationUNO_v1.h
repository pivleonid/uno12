#ifndef INITIALIZATIONUNO_V1_H
#define INITIALIZATIONUNO_V1_H

#ifdef __cplusplus
extern "C" {
#endif

/*!  \file 	InitializationUNO_v1.h
 *   \brief  Этот заголовочный файл InitializationUNO_v1.h
 * содержит в себе прототипы функций настройки и инициализации синтезатора фирмы Advantex,
 * которая косит под пиндосов своим буржуйским даташитом!
 *
 * int uno_open(uint8_t uno_index) -> Это функция настройки синтезатора. В этой функции происходит включение
 * соответствующего модуля SPI5 или SPI6, а также включение синтезатора, работающего от 1 Ггц до 13 ГГц
 * низкочастотный вход не задействован- его надо отдельно настраивать.
 * Выходные параметры: ERR_UNO_Pow = -1 ( Модуль не вкл ); UNO_OK = 0 ( Питание подано );
 *
 * int uno_close( uint8_t uno_index) -> Функция выключает выбранный синтезатор и модуль SPI5 или SPI6
 * Выходные параметры: outputState = 0 ( успешное выключение ); outputStete = -2 ( модуль не выключился )
 *
 * int uno_write( uint8_t uno_index, float freq, uint8_t gain ) -> функция устанавливает частоту 
 * и усиление в выбранный синтезатор.
 * Выходные параметры:	UNO_OK == 0 успешное переключение
 */

/*includes==========================================================================================================*/		
#include "math.h"
#include "stdint.h"
/*defines===========================================================================================================*/


/*types=============================================================================================================*/


/*prototypes========================================================================================================*/
int uno_open(
			uint8_t uno_index /*!< [in] индекс синтезатора 0 или 1 */
			);

int uno_close(
			  uint8_t uno_index /*!< [in] индекс синтезатора 0 или 1 */
			 );

int uno_write(
			 uint8_t uno_index, /*!< [in] индекс синтезатора 0 или 1 */
			 float freq,        /*!< [in] частота от 1 ГГц до 13 ГГц. Устанавливается в МГц */
			 uint8_t gain       /*!< [in] усиление сигнала от 0 до 0x3F */
			  );

int uno_gain(
			uint8_t uno_index, /*!< [in] индекс синтезатора 0 или 1 */
			float freq,		   /*!< [in] частота в МГЦ- не устанавливается на синтезаторе */
			uint8_t gain       /*!< [in] усиление сигнала от 0 до 0x3F */
			);

int SPI_UNO_Transmit(uint8_t* data, uint16_t size);

#ifdef __cplusplus
}
#endif

#endif /* !InitializationUNO_v1.h */


